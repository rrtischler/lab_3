#include <stdlib.h>
#include <math.h>
#include <string.h>
#include "ezdsp5502.h"
#include <stdio.h>
//#include "tistdtypes.h"
//#include "/home/shay/Documents/UFBA/2017.2/Lab3/Lab3_project/git_Project/lab_3/prob_2/Code/dsplib/include/Dsplib.h"

/**
 * main.c
 */
#define UPPERLIMIT 0x7FFF
#define LOWERLIMIT 0x8000
#define BUFFERSIZE    1
#define FS  16000
#define OFFSET 200
#define ATT 0x4000 //0.5 em q15
#define NUMNEWSAMPLES 2048

#define Q 15
#define K (1 << (Q - 1))

    Int16 samples[NUMNEWSAMPLES];
    Int16 outSample[NUMNEWSAMPLES];

    Uint8 buffer[BUFFERSIZE];

    Uint16 maxIn = 0;
    Uint16 maxOut = 0;
    Uint16 data[NUMNEWSAMPLES];      //aqui deve ser DATA*

//void delay();
void dataReader();
void zerarBuffers();
Int16 soma(Int16 a, Int16 b);
Int16 q_mul(Int16 a, Int16 b);
Int16 sat16(Int32 r);


int main(void)
{
    zerarBuffers();

    dataReader();

    return 0;
}

void zerarBuffers(){
    int i;
    for (i= 0; i < 2048; i++){
        samples[i] = 0;
        outSample[i] = 0;
    }
}

void dataReader()
{
    data = [
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30,
    0x7fff, 0x7b30, 0x67a6, 0x4a21, 0x260b, 0xfeda, 0xd7f8, 0xb4e0, 0x98f0, 0x86f7, 0x80c5, 0x86f7, 0x98f0, 0xb4e0, 0xd7f8, 0xfeda, 0x260b, 0x4a21, 0x67a6, 0x7b30
    ];
}

Int16 soma(Int16 a, Int16 b){
    long r;
    r = (Int32)a + (Int32)b;
    return sat16(r);
}

Int16 sat16(Int32 r){
    if ( r > UPPERLIMIT)
        r = UPPERLIMIT;
    else if (r < (Int16)-0x8000)
        r = (Int16)-0x8000;
    return (Int16)r;
}

Int16 q_mul(Int16 a, Int16 b){
    Int16 result;
    Int32 temp;
    temp = (Int32)a * (Int32)b; // result type is operand's type
    // Rounding; mid values are rounded up
    temp += K;
    // Correct by dividing by base and saturate result
    result = sat16(temp >> Q);
    return result;
}
